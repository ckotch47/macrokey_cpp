#include <map>
#define SHIFT 0x80

std::map<String, uint8_t> MapKeyboardKey = {
   {"NUL", 0x00},
   {"SOH", 0x00},
   {"STX", 0x00},
   {"ETX", 0x00},
   {"EOT", 0x00},
   {"ENQ", 0x00},
   {"ACK", 0x00},
   {"BEL", 0x00},

   {"Backspace", 0x2a},
   {"Tab", 0x2b},
   {"Enter", 0x28},
   
   {"VT", 0x00},
   {"FF", 0x00},
   {"CR", 0x00},
   {"SO", 0x00},
   {"SI", 0x00},
   {"DEL", 0x00},
   {"DC1", 0x00},
   {"DC2", 0x00},
   {"DC3", 0x00},
   {"DC4", 0x00},
   {"NAK", 0x00},
   {"SYN", 0x00},
   {"ETB", 0x00},
   {"CAN", 0x00},
   {"EM", 0x00},
   {"SUB", 0x00},
   {"ESC", 0x00},
   {"FS", 0x00},
   {"GS", 0x00},
   {"RS", 0x00},
   {"US", 0x00},

   {"SPACE", 0x2c},
   {"!", 0x1e|SHIFT},
   {"DOUBLE_QUOTE", 0x34|SHIFT},
   {"#", 0x20|SHIFT},
   {"$", 0x21|SHIFT},
   {"%", 0x22|SHIFT},
   {"&", 0x24|SHIFT},
   {"QUOTE", 0x34},
   {"(", 0x26|SHIFT},
   {")", 0x27|SHIFT},
   {"*", 0x25|SHIFT},
   {"+", 0x2e|SHIFT},
   {",", 0x36},
   {"-", 0x2d},
   {".", 0x37},
   {"/", 0x38},

   {"0", 0x27},
   {"1", 0x1e},
   {"2", 0x1f},
   {"3", 0x20},
   {"4", 0x21},
   {"5", 0x22},
   {"6", 0x23},
   {"7", 0x24},
   {"8", 0x25},
   {"9", 0x26},

   {":", 0x33|SHIFT},
   {";", 0x33},
   {"<", 0x36|SHIFT},
   {"=", 0x2e},
   {">", 0x37|SHIFT},
   {"?", 0x38|SHIFT},
   {"@", 0x1f|SHIFT},
   
   {"A", 0x04|SHIFT},
   {"B", 0x05|SHIFT},
   {"C", 0x06|SHIFT},
   {"D", 0x07|SHIFT},
   
   {"E", 0x08|SHIFT},
   {"F", 0x09|SHIFT},
   {"G", 0x0a|SHIFT},
   {"H", 0x0b|SHIFT},
   
   {"I", 0x0c|SHIFT},
   {"J", 0x0d|SHIFT},
   
   {"K", 0x0e|SHIFT},
   {"L", 0x0f|SHIFT},
   {"M", 0x10|SHIFT},
   {"N", 0x11|SHIFT},
   
   {"O", 0x12|SHIFT},
   {"P", 0x13|SHIFT},
   {"Q", 0x14|SHIFT},
   {"R", 0x15|SHIFT},
   
   {"S", 0x16|SHIFT},
   {"T", 0x17|SHIFT},
   {"U", 0x18|SHIFT},
   {"V", 0x19|SHIFT},
   
   {"W", 0x1a|SHIFT},
   {"X", 0x1b|SHIFT},
   {"Y", 0x1c|SHIFT},
   {"Z", 0x1d|SHIFT},
   
   {"[", 0x2f},
   {"B_SLASH", 0x31},
   {"]", 0x30},
   {"^", 0x23|SHIFT},
   {"_", 0x2d|SHIFT},
   {"`", 0x35},
   
   {"a", 0x04},
   {"b", 0x05},
   {"c", 0x06},
   {"d", 0x07},
   
   {"e", 0x08},
   {"f", 0x09},
   {"g", 0x0a},
   {"h", 0x0b},
   
   {"i", 0x0c},
   {"j", 0x0d},
   {"k", 0x0e},
   {"l", 0x0f},
   
   {"m", 0x10},
   {"n", 0x11},
   {"o", 0x12},
   {"p", 0x13},
   
   {"q", 0x14},
   {"e", 0x15},
   {"s", 0x16},
   {"t", 0x17},
   
   {"u", 0x18},
   {"v", 0x19},
   {"w", 0x1a},
   {"x", 0x1b},
   
   {"y", 0x1c},
   {"z", 0x1d},
   
   {"{", 0x2f|SHIFT},
   {"|", 0x31|SHIFT},
   {"}", 0x30|SHIFT},
   {"~", 0x35|SHIFT},
   {"DEL", 0},

   {"KEY_LEFT_CTRL", 0x80},
   {"KEY_LEFT_SHIFT", 0x81},
   {"KEY_LEFT_ALT", 0x82},
   {"KEY_LEFT_GUI", 0x83},
   {"KEY_RIGHT_CTRL", 0x84},
   {"KEY_RIGHT_SHIFT", 0x85},
   {"KEY_RIGHT_ALT", 0x86},
   {"KEY_RIGHT_GUI", 0x87},

   {"KEY_UP_ARROW", 0xDA},
   {"KEY_DOWN_ARROW", 0xD9},
   {"KEY_LEFT_ARROW", 0xD8},
   {"KEY_RIGHT_ARROW", 0xD7},

   {"KEY_BACKSPACE", 0xB2},
   {"KEY_TAB", 0xB3},
   {"KEY_RETURN", 0xB0},
   {"KEY_ESC", 0xB1},
   {"KEY_INSERT", 0xD1},
   {"KEY_PRTSC", 0xCE},
   {"KEY_DELETE", 0xD4},

   {"KEY_PAGE_UP", 0xD3},
   {"KEY_PAGE_DOWN", 0xD6},
   {"KEY_HOME", 0xD2},
   {"KEY_END", 0xD5},

   {"KEY_CAPS_LOCK", 0xC1},

   {"KEY_F1", 0xC2},
   {"KEY_F2", 0xC3},
   {"KEY_F3", 0xC4},
   {"KEY_F4", 0xC5},
   {"KEY_F5", 0xC6},
   {"KEY_F6", 0xC7},
   {"KEY_F7", 0xC8},
   {"KEY_F8", 0xC9},
   {"KEY_F9", 0xCA},
   {"KEY_F10", 0xCB},
   {"KEY_F11", 0xCC},
   {"KEY_F12", 0xCD},

   {"KEY_F13", 0xF0},
   {"KEY_F14", 0xF1},
   {"KEY_F15", 0xF2},
   {"KEY_F16", 0xF3},
   {"KEY_F17", 0xF4},
   {"KEY_F18", 0xF5},
   {"KEY_F19", 0xF6},
   {"KEY_F20", 0xF7},
   {"KEY_F21", 0xF8},
   {"KEY_F22", 0xF9},
   {"KEY_F23", 0xFA},
   {"KEY_F24", 0xFB},

   {"KEY_NUM_0", 0xEA},
   {"KEY_NUM_1", 0xE1},
   {"KEY_NUM_2", 0xE2},
   {"KEY_NUM_3", 0xE3},
   {"KEY_NUM_4", 0xE4},
   {"KEY_NUM_5", 0xE5},
   {"KEY_NUM_6", 0xE6},
   {"KEY_NUM_7", 0xE7},
   {"KEY_NUM_8", 0xE8},
   {"KEY_NUM_9", 0xE9},
   {"KEY_NUM_SLASH", 0xDC},
   {"KEY_NUM_ASTERISK", 0xDD},
   {"KEY_NUM_MINUS", 0xDE},
   {"KEY_NUM_PLUS", 0xDF},
   {"KEY_NUM_ENTER", 0xE0},
   {"KEY_NUM_PERIOD", 0xEB},
};

struct mediaKeyValue{
  uint8_t key[2];
};

std::map<String, mediaKeyValue> MapMediaKeyboardKey = {
    {"KEY_MEDIA_NEXT_TRACK", {1, 0}},
    {"KEY_MEDIA_PREVIOUS_TRACK", {2, 0}},
    {"KEY_MEDIA_STOP", {4, 0}},
    {"KEY_MEDIA_PLAY_PAUSE", {8, 0}},
    
    {"KEY_MEDIA_MUTE", {16, 0}},
    {"KEY_MEDIA_VOLUME_UP", {32, 0}},
    {"KEY_MEDIA_VOLUME_DOWN", {64, 0}},
    {"KEY_MEDIA_WWW_HOME", {128, 0}},

    {"KEY_MEDIA_LOCAL_MACHINE_BROWSER", {0, 1}},
    {"KEY_MEDIA_CALCULATOR", {0, 2}},
    {"KEY_MEDIA_WWW_BOOKMARKS", {0, 4}},
    {"KEY_MEDIA_WWW_SEARCH", {0, 8}},

    {"KEY_MEDIA_WWW_STOP", {0, 16}},
    {"KEY_MEDIA_WWW_BACK", {0, 32}},
    {"KEY_MEDIA_CONSUMER_CONTROL_CONFIGURATION", {0, 64}},
    {"KEY_MEDIA_EMAIL_READER", {0, 128}}
};